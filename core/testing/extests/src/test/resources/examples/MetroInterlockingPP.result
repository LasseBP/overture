{"exampleName":"MetroInterlockingPP","defNames":["Execute","Track","CircularLine","LinearLine","World","InitialiseSystem","Run","TickWorld","Pad","Print","system","units","lines","Track","Line","setUp","AddLines","AddUnits","RelocateUnits","TickAll","States","testPrioritiseUnits1","testPrioritiseUnits2","testPrioritiseUnits3","testTick1","testTick2","testTick3","tearDown","MetroUnitId","MetroUnitState","id","state","line","trackIndex","inv_MetroUnit","recentStates","inv_MetroUnit","MetroUnit","GetId","GetLine","GetLocation","GetNextLocation","GetState","IsStuck","Relocate","Run","Stop","Tick","Move","UpdateRecentStates","Coordinate","NonEmptyString","TrackKind","Track","CapacityMap","MetroLineName","MetroLine","lines","units","inv_InterlockingSystem","inv_InterlockingSystem","AllTracks","IsCircular","InRangeOfTracks","NextTrackIndex","TrackAt","CreateCircularLine","CreateReversedCircularLine","CreateLinearLine","LinearToCircularLine","Reverse","Length","UnitSetToSequence","Card","AddUnit","RemoveUnit","AddLine","RemoveLine","IsAnyUnitStuck","FindStuckUnit","Tick","TracksAccommodateAllMetroUnits","RemainingCapacities","RemainingCapacityOf","NumberOfEnteringUnitsOn","UnitsAllowedToRun","PrioritiseUnits","UnitsOn","MayRun","Occupied","filedirective","writeval","fwriteval","freadval","echo","fecho","ferror","print","println","printf","fMessage","Error","Error","hasMessage","getMessage","throw","AssertionFailedError","AssertionFailedError","assertTrue","assertTrue","assertFalse","assertFalse","fail","fail","fName","getName","setName","run","runOnly","run","run","runOnly","createResult","TestCase","TestCase","setUp","runTest","reflectionRunTest","runBare","tearDown","fTests","TestSuite","TestSuite","TestSuite","TestSuite","TestSuite","TestSuite","addTest","run","runOnly","run","tests","testCount","testAt","getTestMethodNamed","createTests","initListener","exitListener","addFailure","addError","startTest","endTest","InternalError","fFailures","fErrors","fRunTests","fListeners","addListener","removeListener","addFailure","addError","startTest","endTest","run","runProtected","runCount","failureCount","errorCount","wasSuccessful","toString","ToStringInt","GetStringFromNum","run","collectTests","set2seq","get_file_pos","val2seq_of_char","seq_of_char2val","classname"]}