"Before valid use"
"After valid use"
"Before illegal use"
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:64: JML invariant is false on leaving method project.Entrytypes.A2.valid()
    public Boolean valid() {
                   ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:14: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:64: 
    //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                        ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:70: JML caller invariant is false on leaving calling method (Parameter: _f, Caller: project.Entrytypes.A1.inv_A1(project.Entrytypes.A2), Callee: java.lang.Number.longValue())
    public static Boolean inv_A1(final project.Entrytypes.A2 _f) {
                                                             ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:14: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:70: 
    //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                        ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:70: JML invariant is false on leaving method project.Entrytypes.A1.inv_A1(project.Entrytypes.A2) (parameter _f)
    public static Boolean inv_A1(final project.Entrytypes.A2 _f) {
                                                             ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:14: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:70: 
    //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                        ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:70: JML caller invariant is false on leaving calling method (Parameter: _f, Caller: project.Entrytypes.A1.inv_A1(project.Entrytypes.A2), Callee: java.lang.Number.longValue())
    public static Boolean inv_A1(final project.Entrytypes.A2 _f) {
                                                             ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:14: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:70: 
    //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                        ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:70: JML invariant is false on leaving method project.Entrytypes.A1.inv_A1(project.Entrytypes.A2) (parameter _f)
    public static Boolean inv_A1(final project.Entrytypes.A2 _f) {
                                                             ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:14: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:70: 
    //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                        ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:64: JML invariant is false on leaving method project.Entrytypes.A1.valid()
    public Boolean valid() {
                   ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:14: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:64: 
    //@ public instance invariant project.Entry.invChecksOn ==> inv_A1(f);
                        ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:14: JML invariant is false
    //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                        ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:64: JML invariant is false on leaving method project.Entrytypes.A2.valid()
    public Boolean valid() {
                   ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:14: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:64: 
    //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                        ^
"After illegal use"