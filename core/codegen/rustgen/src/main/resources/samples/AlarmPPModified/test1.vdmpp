\begin{vdm_al}
class Test1

instance variables

a1   : Plant`Alarm  := mk_Plant`Alarm("Mechanical fault", <Mech>);
a2   : Plant`Alarm  := mk_Plant`Alarm("Tank overflow", <Chem>);
ex1  : Plant`Expert := mk_Plant`Expert({<Mech>,<Bio>});
ex2  : Plant`Expert := mk_Plant`Expert({<Elec>});
ex3  : Plant`Expert := mk_Plant`Expert({<Chem>,<Bio>,<Mech>});
ex4  : Plant`Expert := mk_Plant`Expert({<Elec>,<Chem>});
plant: Plant  := new Plant({a1},{p1 |-> {ex1,ex4},
                                 p2 |-> {ex2,ex3}});

values

p1: Plant`Period = mk_token("Monday day");
p2: Plant`Period = mk_token("Monday night");
p3: Plant`Period = mk_token("Tuesday day");
p4: Plant`Period = mk_token("Tuesday night");

operations

public Run: () ==> set of Plant`Period * Plant`Expert
Run() == 
  let periods = plant.ExpertIsOnDuty(ex1),
      expert  = plant.ExpertToPage(a1,p1)
  in 
    return mk_(periods,expert);

end Test1
\end{vdm_al}
